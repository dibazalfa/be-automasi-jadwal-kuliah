generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model user {
    id       String @id @default(uuid())
    email    String @unique
    name     String @db.VarChar(255)
    username String @db.VarChar(255)
    password String @db.VarChar(255)
    role     Role   @default(OPERATOR)

    dosens          dosen[]
    mataKuliah      mata_kuliah[]
    mataKuliahKelas mata_kuliah_kelas[]
    jadwalHindari   jadwal_hindari[]
    ruangans        ruangan[]
}

enum Role {
    ADMINISTRATOR
    OPERATOR
}

model dosen {
    dosen_kode              String                    @id @db.VarChar(50)
    dosen_nama              String                    @db.VarChar(255)
    dosen_prioritas         Prioritas                 @default(NON_PRIORITAS)
    userId                  String
    user                    user                      @relation(fields: [userId], references: [id], onDelete: Cascade)
    jadwal_dosen            jadwal_dosen[]
    mata_kuliah_kelas_dosen mata_kuliah_kelas_dosen[]

    @@unique([dosen_kode, userId])
}

enum Prioritas {
    PRIORITAS
    NON_PRIORITAS
}

model jadwal_dosen {
    id_jadwal_dosen  String @id @default(uuid())
    dosen_kode       String @db.VarChar(50)
    dosen_sedia_hari Hari
    dosen_sedia_sesi Sesi
    dosen            dosen  @relation(fields: [dosen_kode], references: [dosen_kode], onDelete: Cascade)
}

enum Hari {
    SENIN
    SELASA
    RABU
    KAMIS
    JUMAT
}

enum Sesi {
    SATU
    DUA
    TIGA
}

model mata_kuliah {
    matkul_kode       String              @id @db.VarChar(50)
    matkul_nama       String              @db.VarChar(255)
    userId            String
    user              user                @relation(fields: [userId], references: [id], onDelete: Cascade)
    mata_kuliah_kelas mata_kuliah_kelas[]

    @@unique([matkul_kode, userId])
}

model mata_kuliah_kelas {
    id_mk_kelas             String                    @id @default(uuid())
    matkul_kode             String                    @db.VarChar(50)
    kelas_mk                Kelas
    nama_kelas              String                    @db.VarChar(255)
    userId                  String
    user                    user                      @relation(fields: [userId], references: [id], onDelete: Cascade)
    mata_kuliah             mata_kuliah               @relation(fields: [matkul_kode], references: [matkul_kode], onDelete: Cascade)
    mata_kuliah_kelas_dosen mata_kuliah_kelas_dosen[]
    jadwal                  jadwal[]

    @@unique([id_mk_kelas, userId])
}

enum Kelas {
    A
    B
    C
    D
}

model mata_kuliah_kelas_dosen {
    id_mk_kelas_dosen String            @id @default(uuid())
    id_mk_kelas       String
    dosen_kode        String            @db.VarChar(50)
    mk_kelas_sem      Int[]
    matkul_tipe       TipeMK            @default(DEPARTEMEN)
    mata_kuliah_kelas mata_kuliah_kelas @relation(fields: [id_mk_kelas], references: [id_mk_kelas], onDelete: Cascade)
    dosen             dosen             @relation(fields: [dosen_kode], references: [dosen_kode], onDelete: Cascade)
}

enum TipeMK {
    DEPARTEMEN
    PENGAYAAN
}

model jadwal_hindari {
    id_hindari     String @id @default(uuid())
    hindari_agenda String @db.VarChar(255)
    hindari_hari   Hari
    hindari_sesi   Sesi
    hindari_smt    Int[]
    userId         String
    user           user   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([id_hindari, userId])
}

model ruangan {
    ruangan_kode      String   @id @default(uuid())
    ruangan_kapasitas Int
    userId            String
    user              user     @relation(fields: [userId], references: [id], onDelete: Cascade)
    jadwal            jadwal[]

    @@unique([ruangan_kode, userId])
}

model jadwal {
    id_jadwal    String @id @default(uuid())
    id_mk_kelas  String
    ruangan_kode String
    jadwal_hari  Hari
    jadwal_sesi  Sesi
    jadwal_smt   Int[]

    mata_kuliah_kelas mata_kuliah_kelas @relation(fields: [id_mk_kelas], references: [id_mk_kelas], onDelete: Cascade)
    ruangan           ruangan           @relation(fields: [ruangan_kode], references: [ruangan_kode], onDelete: Cascade)
}
